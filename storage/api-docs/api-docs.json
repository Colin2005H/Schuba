{
    "openapi": "3.0.0",
    "info": {
        "title": "Schuba API",
        "description": "API for managing diving club activities",
        "version": "0.3.5"
    },
    "paths": {
        "/api/skill": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get a list of skills",
                "description": "Retrieves a list of skills based on the provided filters.",
                "operationId": "getSkills",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "query",
                        "description": "The ID of the skill to search for",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "LEVEL",
                        "in": "query",
                        "description": "The level of the skill to filter by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "NAME",
                        "in": "query",
                        "description": "The name or part of the name of the skill to search for",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Scuba Diving"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of skills",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "CPT_ID": {
                                                "type": "string",
                                                "example": "123"
                                            },
                                            "LEVEL": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "NAME": {
                                                "type": "string",
                                                "example": "Basic Scuba Diving"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Skills"
                ],
                "summary": "Create a new skill",
                "description": "Creates a new skill with the specified level and name.",
                "operationId": "createSkill",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL",
                                    "NAME"
                                ],
                                "properties": {
                                    "LEVEL": {
                                        "description": "The level associated with the skill",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "NAME": {
                                        "description": "The name of the skill",
                                        "type": "string",
                                        "example": "Basic Scuba Diving"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Skill successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Skill successfully created!"
                                        },
                                        "skill": {
                                            "properties": {
                                                "CPT_ID": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "LEVEL": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Basic Scuba Diving"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/skill/{id}": {
            "put": {
                "tags": [
                    "Skills"
                ],
                "summary": "Update a skill",
                "description": "Updates the details of an existing skill by its ID.",
                "operationId": "updateSkill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the skill to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL",
                                    "NAME"
                                ],
                                "properties": {
                                    "LEVEL": {
                                        "description": "The level associated with the skill",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "NAME": {
                                        "description": "The name of the skill",
                                        "type": "string",
                                        "example": "Advanced Scuba Diving"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Skill successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Skill successfully updated!"
                                        },
                                        "skill": {
                                            "properties": {
                                                "CPT_ID": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "LEVEL": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Advanced Scuba Diving"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Skill not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Skill not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Skills"
                ],
                "summary": "Delete a competence",
                "description": "Deletes a competence by its ID.",
                "operationId": "deleteCompetence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the competence to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Competence successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Competence successfully deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Competence not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Competence not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/formation": {
            "get": {
                "tags": [
                    "Formations"
                ],
                "summary": "List filtered formations",
                "description": "Retrieve a list of formations filtered by criteria such as formation level, name, description, and maximum number of professors.",
                "operationId": "listFormations",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "query",
                        "description": "Formation level ID to filter the results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "NAME",
                        "in": "query",
                        "description": "Formation name (uses LIKE 'name%')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Niveau 1 Plongée"
                        }
                    },
                    {
                        "name": "DESCRIPTION",
                        "in": "query",
                        "description": "Formation description (uses LIKE 'description%')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Formation de plongée pour débutants"
                        }
                    },
                    {
                        "name": "MAX_TEACHERS",
                        "in": "query",
                        "description": "Maximum number of professors for the formation",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the formations matching the criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "FORM_NIVEAU": {
                                                "description": "Formation level",
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "FORM_LIBELLE": {
                                                "description": "Formation name",
                                                "type": "string",
                                                "example": "Niveau 1 Plongée"
                                            },
                                            "FORM_DESCRIPTION": {
                                                "description": "Formation description",
                                                "type": "string",
                                                "example": "Formation de plongée pour débutants"
                                            },
                                            "FORM_PROF_MAX": {
                                                "description": "Maximum number of professors",
                                                "type": "integer",
                                                "example": 3
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Formations"
                ],
                "summary": "Create a new formation",
                "description": "Creates a new formation with the provided name, description, and maximum number of professors.",
                "operationId": "createFormation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "NAME",
                                    "MAX_TEACHERS"
                                ],
                                "properties": {
                                    "NAME": {
                                        "description": "The name of the formation",
                                        "type": "string",
                                        "example": "Niveau 1 Plongée"
                                    },
                                    "DESCRIPTION": {
                                        "description": "The description of the formation",
                                        "type": "string",
                                        "example": "Formation de plongée pour débutants"
                                    },
                                    "MAX_TEACHERS": {
                                        "description": "The maximum number of professors for the formation",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Formation successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Formation successfully created!"
                                        },
                                        "formation": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Niveau 1 Plongée"
                                                },
                                                "DESCRIPTION": {
                                                    "type": "string",
                                                    "example": "Formation de plongée pour débutants"
                                                },
                                                "MAX_TEACHERS": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/formation/{id}": {
            "put": {
                "tags": [
                    "Formations"
                ],
                "summary": "Update a formation",
                "description": "Updates the details of an existing formation by its level ID (FORM_NIVEAU).",
                "operationId": "updateFormation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the formation to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "NAME",
                                    "DESCRIPTION",
                                    "MAX_TEACHERS"
                                ],
                                "properties": {
                                    "NAME": {
                                        "description": "The name of the formation",
                                        "type": "string",
                                        "example": "Niveau 1 Plongée"
                                    },
                                    "DESCRIPTION": {
                                        "description": "The description of the formation",
                                        "type": "string",
                                        "example": "Formation de plongée pour débutants"
                                    },
                                    "MAX_TEACHERS": {
                                        "description": "The maximum number of professors for the formation",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Formation successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Formation successfully updated!"
                                        },
                                        "formation": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Niveau 1 Plongée"
                                                },
                                                "DESCRIPTION": {
                                                    "type": "string",
                                                    "example": "Formation de plongée pour débutants"
                                                },
                                                "MAX_TEACHERS": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Formation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Formation not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Formations"
                ],
                "summary": "Delete a formation",
                "description": "Deletes a formation by its level ID (FORM_NIVEAU).",
                "operationId": "deleteFormation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the formation to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Formation successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Formation successfully deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Formation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Formation not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/initiator": {
            "get": {
                "tags": [
                    "Initiators"
                ],
                "summary": "Get Initiator information",
                "description": "Retrieve information about one or more initiators. Optionally filter by ID.",
                "operationId": "getInitiateur",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "query",
                        "description": "The ID of the initiator to filter by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of initiators or specific initiator if ID is provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "ID": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Initiators"
                ],
                "summary": "Create a new initiator",
                "description": "Create an initiator by associating an existing user with the initiator role using their ID.",
                "operationId": "createInitiateur",
                "requestBody": {
                    "description": "Initiator data to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ID"
                                ],
                                "properties": {
                                    "ID": {
                                        "description": "The ID of the existing user (PloUtilisateur) to associate as the initiator",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully created the initiator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Initiator successfully created!"
                                        },
                                        "session": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/initiator/{id}": {
            "delete": {
                "tags": [
                    "Initiators"
                ],
                "summary": "Delete an initiator",
                "description": "Delete an initiator by their ID.",
                "operationId": "deleteInitiateur",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the initiator to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the initiator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Initiator successfully deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Initiator not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot find the initiator."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/location": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get locations based on filters",
                "description": "This API allows you to retrieve a list of locations based on optional filters like ID, name, and type.",
                "operationId": "9e549a3ff77400108eb891e2d7c542b8",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "query",
                        "description": "ID of the location",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "NAME",
                        "in": "query",
                        "description": "Name of the location. Use partial matching with '%' for wildcards.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TYPE",
                        "in": "query",
                        "description": "Type of the location. Use partial matching with '%' for wildcards.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of locations retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "ID": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "NAME": {
                                                "type": "string",
                                                "example": "Location Name"
                                            },
                                            "TYPE": {
                                                "type": "string",
                                                "example": "Location Type"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No locations found matching the criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "description": "This API allows you to create a new location by providing the necessary details such as the name and type of the location.",
                "operationId": "ecf2e09da814057f2da7594e8bed3a29",
                "requestBody": {
                    "description": "The necessary data to create a new location",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "NAME",
                                    "TYPE"
                                ],
                                "properties": {
                                    "NAME": {
                                        "description": "The name of the location",
                                        "type": "string",
                                        "example": "Room 101"
                                    },
                                    "TYPE": {
                                        "description": "The type of the location",
                                        "type": "string",
                                        "example": "Classroom"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location created successfully!"
                                        },
                                        "location": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Room 101"
                                                },
                                                "TYPE": {
                                                    "type": "string",
                                                    "example": "Classroom"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error in the provided data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided data is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/location/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update an existing location",
                "description": "This API allows you to update an existing location's details (name and type) by providing the location's ID.",
                "operationId": "720b8adf7dd249484a1050c6a094168c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the location to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "The new data to update the location",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "NAME",
                                    "TYPE"
                                ],
                                "properties": {
                                    "NAME": {
                                        "description": "The new name of the location",
                                        "type": "string",
                                        "example": "Room 202"
                                    },
                                    "TYPE": {
                                        "description": "The new type of the location",
                                        "type": "string",
                                        "example": "Lecture Hall"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location successfully updated!"
                                        },
                                        "location": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Room 202"
                                                },
                                                "TYPE": {
                                                    "type": "string",
                                                    "example": "Lecture Hall"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot find the location."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error in the provided data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided data is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "description": "This API allows you to delete an existing location by providing the location's ID.",
                "operationId": "bcb3db1c38318947a216ad4e32d7ecc9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the location to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot find the location."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided data is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session": {
            "get": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Get sessions based on filters",
                "description": "Fetch a list of sessions by filtering on session ID, location ID, and start and end dates.",
                "operationId": "606addeb37c766d37032d78b33a121a6",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "query",
                        "description": "Session ID to filter the results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "LOCATION_ID",
                        "in": "query",
                        "description": "Location ID to filter the sessions",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "START",
                        "in": "query",
                        "description": "Start date to filter the sessions (format: yyyy-mm-dd or yyyy-mm-ddThh:mm:ss)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-01T09:00:00"
                        }
                    },
                    {
                        "name": "END",
                        "in": "query",
                        "description": "End date to filter the sessions (format: yyyy-mm-dd or yyyy-mm-ddThh:mm:ss)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-10T11:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "ID": {
                                                "description": "Session ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "LOCATION_ID": {
                                                "description": "Location ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "LEVEL": {
                                                "description": "Training level ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "START": {
                                                "description": "Session start date",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-01-07T11:43:52+00:00"
                                            },
                                            "END": {
                                                "description": "Session end date",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-02-01T12:43:52+00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Create a new session",
                "description": "This API allows you to create a new session by providing the necessary details such as the location, training level, and start and end dates. The session will be validated and stored in the database, and the created session details will be returned in the response.",
                "operationId": "9a8c7631454e6f0814974fd7d9df18f7",
                "requestBody": {
                    "description": "The necessary data to create a new session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LOCATION_ID",
                                    "LEVEL",
                                    "START",
                                    "END"
                                ],
                                "properties": {
                                    "LOCATION_ID": {
                                        "description": "ID of the location where the session is held",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "LEVEL": {
                                        "description": "ID of the training level",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "START": {
                                        "description": "Start date and time of the session",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-01T09:00:00"
                                    },
                                    "END": {
                                        "description": "End date and time of the session",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-02-01T11:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Session created successfully!"
                                        },
                                        "session": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "LOCATION_ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "LEVEL": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "START": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-02-10T09:00:00"
                                                },
                                                "END": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-02-10T11:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error in the provided data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided data is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/{id}": {
            "put": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Update an existing session",
                "description": "This API allows you to update an existing session by providing the session ID and the details you want to modify (location, training level, start date, and end date). If no data is provided for a particular field, it will remain unchanged.",
                "operationId": "ab30209bd36e6d64d0af6928efbe558c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the session to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "The data to update the session. You can provide any of the following fields. If not provided, they will remain unchanged.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "LOCATION_ID": {
                                        "description": "ID of the location where the session is held",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "LEVEL": {
                                        "description": "ID of the training level",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "START": {
                                        "description": "Start date and time of the session",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-01T09:00:00"
                                    },
                                    "END": {
                                        "description": "End date and time of the session",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-01T11:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Session updated successfully!"
                                        },
                                        "session": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "LOCATION_ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "LEVEL": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "START": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-02-10T09:00:00"
                                                },
                                                "END": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-02-10T11:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot find the session."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error in the provided data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided data is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sessions"
                ],
                "summary": "Delete an existing session",
                "description": "This API allows you to delete an existing session by providing the session ID. If the session with the specified ID does not exist, a 404 error is returned.",
                "operationId": "daf79a1a7d42782e46957f96db02d563",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the session to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Session successfully deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot find the session."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List filtered users",
                "description": "Retrieve a list of users filtered by various criteria such as user ID, last name, first name, email, creation date, etc.",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "u_id",
                        "in": "query",
                        "description": "User ID to filter the results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "c_id",
                        "in": "query",
                        "description": "Club ID to filter the users",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's last name (uses LIKE 'name%')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Doe"
                        }
                    },
                    {
                        "name": "firstname",
                        "in": "query",
                        "description": "User's first name (uses LIKE 'firstname%')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address (uses LIKE 'email%')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "john.doe@example.com"
                        }
                    },
                    {
                        "name": "creation_date",
                        "in": "query",
                        "description": "Filter users by creation date (format: yyyy-mm-dd)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Filter users by date of birth (format: yyyy-mm-dd)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "1990-01-01"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "User's level",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the users matching the criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "ID": {
                                                "description": "User ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "CLUB_ID": {
                                                "description": "Club ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "NAME": {
                                                "description": "User's last name",
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "FIRSTNAME": {
                                                "description": "User's first name",
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "EMAIL": {
                                                "description": "User's email address",
                                                "type": "string",
                                                "example": "john.doe@example.com"
                                            },
                                            "LEVEL": {
                                                "description": "User's level",
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "BIRTH_DATE": {
                                                "description": "User's date of birth",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "1990-01-01T00:00:00"
                                            },
                                            "CREATION_DATE": {
                                                "description": "User's account creation date",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-01-01T12:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect or invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user in the system by providing user details.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User object that needs to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "NAME",
                                    "FIRSTNAME",
                                    "EMAIL",
                                    "PASSWORD"
                                ],
                                "properties": {
                                    "CLUB_ID": {
                                        "description": "The ID of the club the user belongs to",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "NAME": {
                                        "description": "The last name of the user",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "FIRSTNAME": {
                                        "description": "The first name of the user",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "EMAIL": {
                                        "description": "The email of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "PASSWORD": {
                                        "description": "The password of the user",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "LEVEL": {
                                        "description": "The level of the user",
                                        "type": "string",
                                        "example": "Beginner"
                                    },
                                    "BIRTH_DATE": {
                                        "description": "The birth date of the user",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully created!"
                                        },
                                        "session": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "CLUB_ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "FIRSTNAME": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "EMAIL": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "PASSWORD": {
                                                    "type": "string",
                                                    "example": "hashed_password"
                                                },
                                                "LEVEL": {
                                                    "type": "string",
                                                    "example": "Beginner"
                                                },
                                                "BIRTH_DATE": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "CREATION_DATE": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2022-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, if the provided data is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error: Email is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict, if the email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Update the details of an existing user by providing their ID and the required fields.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CLUB_ID": {
                                        "description": "The ID of the club the user belongs to",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "NAME": {
                                        "description": "The last name of the user",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "FIRSTNAME": {
                                        "description": "The first name of the user",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "EMAIL": {
                                        "description": "The email of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "PASSWORD": {
                                        "description": "The password of the user (only required if updating)",
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "LEVEL": {
                                        "description": "The level of the user",
                                        "type": "string",
                                        "example": "Beginner"
                                    },
                                    "BIRTH_DATE": {
                                        "description": "The birth date of the user",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully updated!"
                                        },
                                        "user": {
                                            "properties": {
                                                "ID": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "CLUB_ID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "NAME": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "FIRSTNAME": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "EMAIL": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "PASSWORD": {
                                                    "type": "string",
                                                    "example": "hashed_password"
                                                },
                                                "LEVEL": {
                                                    "type": "string",
                                                    "example": "Beginner"
                                                },
                                                "BIRTH_DATE": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2000-01-01"
                                                },
                                                "CREATION_DATE": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2022-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, if the provided data is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error: Email is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a user from the system by providing their ID.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong, please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Skills",
            "description": "Skills"
        },
        {
            "name": "Formations",
            "description": "Formations"
        },
        {
            "name": "Initiators",
            "description": "Initiators"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Sessions",
            "description": "Sessions"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}